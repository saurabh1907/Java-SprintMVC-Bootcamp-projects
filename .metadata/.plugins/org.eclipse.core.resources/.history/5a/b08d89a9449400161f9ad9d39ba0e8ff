package com.flp.ems.service;

import java.util.ArrayList;
import java.sql.Date;
import java.util.HashMap;

import com.flp.ems.dao.EmployeeDaoImplForDB;
import com.flp.ems.domain.Employee;
import com.flp.ems.util.DateParser;

public class EmployeeServiceImpl implements IEmployeeService {
	private EmployeeDaoImplForDB dao= new EmployeeDaoImplForDB();

	@Override
	public void addEmployee(HashMap<String, String> employeeData) {
		try {
			String name = employeeData.get("name");
			String kinID = employeeData.get("kinID");
			long phoneNo = Long.parseLong(employeeData.get("phoneNo"));
			System.out.println(employeeData.get("dob"));
			Date dob = DateParser.dateParser(employeeData.get("dob"));
			System.out.println(dob);
			Date doj = DateParser.dateParser(employeeData.get("doj"));
			String address = employeeData.get("address");
			int deptID = Integer.parseInt(employeeData.get("deptID"));
			int projectID = Integer.parseInt(employeeData.get("projectID"));
			int rolesID = Integer.parseInt(employeeData.get("rolesID"));

			Employee employee = new Employee(name, kinID, phoneNo, dob, doj, address, deptID, projectID, rolesID);
			dao.addEmployee(employee);
		} catch (java.text.ParseException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void modifyEmployee(HashMap<String, String> employeeData) {
		Employee employee = dao.searchEmployee((String) employeeData.get("kinID"));
		if (employee != null) {
			try {
				employee.setName(employeeData.get("name"));
				employee.setKinID(employeeData.get("kinID"));
				employee.setPhoneNo(Long.parseLong(employeeData.get("phoneNo")));
				employee.setDateOfBirth(DateParser.dateParser(employeeData.get("dob")));
				employee.setDateOfJoining(DateParser.dateParser(employeeData.get("doj")));
				employee.setAddress(employeeData.get("address"));
				employee.setDepartmentID(Integer.parseInt(employeeData.get("deptID")));
				employee.setProjectID(Integer.parseInt(employeeData.get("projectID")));
				employee.setRolesID(Integer.parseInt(employeeData.get("rolesID")));

				dao.modifyEmployee(employee);
			} catch (java.text.ParseException e) {
				e.printStackTrace();
			}
		}
	}

	@Override
	public void removeEmployee(String employeeID) {
		dao.removeEmployee(Integer.parseInt(employeeID));
	}

	@Override
	public ArrayList<HashMap<String,Object>> searchEmployee(String nameOrId) {
		ArrayList<HashMap<String, Object>> employeeList = new ArrayList<>();
		HashMap<String,Object> tempEmpData;
		Employee currentEmployee= dao.searchEmployee(nameOrId);
		
		tempEmpData= new HashMap<>();
		tempEmpData.put("id", currentEmployee.getId());
		tempEmpData.put("name", currentEmployee.getName());
		tempEmpData.put("kinID", currentEmployee.getKinID());
		tempEmpData.put("phoneNo", currentEmployee.getPhoneNo());
		tempEmpData.put("dob", currentEmployee.getDateOfBirth());
		tempEmpData.put("doj", currentEmployee.getDateOfJoining());
		tempEmpData.put("address", currentEmployee.getAddress());
		tempEmpData.put("deptID", currentEmployee.getDepartmentID());
		tempEmpData.put("projectID", currentEmployee.getPhoneNo());
		tempEmpData.put("rolesID", currentEmployee.getRolesID());
		employeeList.add(tempEmpData);
		return employeeList;
	}

	@Override
	public ArrayList<HashMap<String, Object>> getAllEmployee() {
		ArrayList<HashMap<String, Object>> employeeList = new ArrayList<>();
		HashMap<String,Object> tempEmpData;
		for(Employee currentEmployee: dao.getAllEmployee()){
			tempEmpData= new HashMap<>();
			tempEmpData.put("id", currentEmployee.getId());
			tempEmpData.put("name", currentEmployee.getName());
			tempEmpData.put("kinID", currentEmployee.getKinID());
			tempEmpData.put("phoneNo", currentEmployee.getPhoneNo());
			tempEmpData.put("dob", currentEmployee.getDateOfBirth());
			tempEmpData.put("doj", currentEmployee.getDateOfJoining());
			tempEmpData.put("address", currentEmployee.getAddress());
			tempEmpData.put("deptID", currentEmployee.getDepartmentID());
			tempEmpData.put("projectID", currentEmployee.getPhoneNo());
			tempEmpData.put("rolesID", currentEmployee.getRolesID());
			employeeList.add(tempEmpData);
		}
			return employeeList;
	}
}
