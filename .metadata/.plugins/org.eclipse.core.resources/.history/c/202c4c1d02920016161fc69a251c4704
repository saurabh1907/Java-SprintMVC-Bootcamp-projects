package com.cg;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Repository;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;



public class JDBCDAO  {
	//TODO 3 Declare a local variable datasource of type DataSource follow encapsulation principle
	private DataSource datasource;
	private Connection con;
	

	
	{
		System.out.println("inside instance initializer block");
		ApplicationContext appContext = new ClassPathXmlApplicationContext("applicationContext.xml");

		datasource = (DataSource) appContext.getBean("VIMDataSource");
		try {
			con = datasource.getConnection();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if(con!=null){
			System.out.println("connection is obtained");
		}
		else
			System.out.println("invalide connection");
		
	}

	
	
}
